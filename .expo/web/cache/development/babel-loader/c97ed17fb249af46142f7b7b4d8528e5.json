{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\AndroidStudioProjects\\\\berkay\\\\bitirme\\\\components\\\\main\\\\Add.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport firebase from 'firebase';\nimport 'firebase/auth';\nimport { useNavigation } from '@react-navigation/native';\nimport { connect } from 'react-redux';\n\nvar Add = function (_Component) {\n  _inherits(Add, _Component);\n\n  var _super = _createSuper(Add);\n\n  function Add() {\n    _classCallCheck(this, Add);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Add, [{\n    key: \"onAdd\",\n    value: function onAdd() {\n      var _this$state = this.state,\n          title = _this$state.title,\n          topic = _this$state.topic,\n          description = _this$state.description;\n      var uid = firebase.auth().currentUser.uid;\n      firebase.firestore().collection('posts').add({\n        title: title,\n        topic: topic,\n        description: description,\n        uid: uid,\n        username: currentUser.username,\n        creation: firebase.firestore.FieldValue.serverTimestamp()\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"title\",\n        onChangeText: function onChangeText(title) {\n          return _this.setState({\n            title: title\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"topic\",\n        onChangeText: function onChangeText(topic) {\n          return _this.setState({\n            topic: topic\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"description\",\n        onChangeText: function onChangeText(description) {\n          return _this.setState({\n            description: description\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this.onAdd();\n        },\n        title: \"Post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Add;\n}(Component(props));\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    posts: store.userState.posts\n  };\n};\n\nexport default connect(mapStateToProps, null)(Add);","map":{"version":3,"sources":["C:/Users/user/AndroidStudioProjects/berkay/bitirme/components/main/Add.js"],"names":["React","Component","firebase","useNavigation","connect","Add","state","title","topic","description","uid","auth","currentUser","firestore","collection","add","username","creation","FieldValue","serverTimestamp","catch","error","console","log","setState","onAdd","props","mapStateToProps","store","userState","posts"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,eAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAIMC,G;;;;;;;;;;;;;WAiBF,iBAAO;AACH,wBAAsC,KAAKC,KAA3C;AAAA,UAAQC,KAAR,eAAQA,KAAR;AAAA,UAAeC,KAAf,eAAeA,KAAf;AAAA,UAAsBC,WAAtB,eAAsBA,WAAtB;AACA,UAAMC,GAAG,GAAGR,QAAQ,CAACS,IAAT,GAAgBC,WAAhB,CAA4BF,GAAxC;AACAR,MAAAA,QAAQ,CAACW,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EACKC,GADL,CACS;AACDR,QAAAA,KAAK,EAALA,KADC;AAEDC,QAAAA,KAAK,EAALA,KAFC;AAGDC,QAAAA,WAAW,EAAXA,WAHC;AAIDC,QAAAA,GAAG,EAAHA,GAJC;AAKDM,QAAAA,QAAQ,EAAEJ,WAAW,CAACI,QALrB;AAMDC,QAAAA,QAAQ,EAAEf,QAAQ,CAACW,SAAT,CAAmBK,UAAnB,CAA8BC,eAA9B;AANT,OADT,EASCC,KATD,CASO,UAACC,KAAD,EAAW;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAXD;AAaH;;;WAED,kBAAS;AAAA;;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAC,OADhB;AAEI,QAAA,YAAY,EAAE,sBAACd,KAAD;AAAA,iBAAW,KAAI,CAACiB,QAAL,CAAc;AAAEjB,YAAAA,KAAK,EAALA;AAAF,WAAd,CAAX;AAAA,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAMI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAC,OADhB;AAEI,QAAA,YAAY,EAAE,sBAACC,KAAD;AAAA,iBAAW,KAAI,CAACgB,QAAL,CAAc;AAAEhB,YAAAA,KAAK,EAALA;AAAF,WAAd,CAAX;AAAA,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAWI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAC,aADhB;AAEI,QAAA,YAAY,EAAE,sBAACC,WAAD;AAAA,iBAAiB,KAAI,CAACe,QAAL,CAAc;AAAEf,YAAAA,WAAW,EAAXA;AAAF,WAAd,CAAjB;AAAA,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,EAiBI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACgB,KAAL,EAAN;AAAA,SADb;AAEI,QAAA,KAAK,EAAC,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBJ,CADJ;AAwBH;;;;EA5DaxB,SAAS,CAAEyB,KAAF,C;;AA+D3B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAChChB,IAAAA,WAAW,EAAEgB,KAAK,CAACC,SAAN,CAAgBjB,WADG;AAEhCkB,IAAAA,KAAK,EAAEF,KAAK,CAACC,SAAN,CAAgBC;AAFS,GAAZ;AAAA,CAAxB;;AAIA,eAAe1B,OAAO,CAACuB,eAAD,EAAkB,IAAlB,CAAP,CAA+BtB,GAA/B,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport{View,Button,TextInput} from 'react-native'\r\nimport firebase from 'firebase'\r\nimport 'firebase/auth';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nclass Add extends Component (props) {\r\n\r\n    /*\r\n    constructor(props){\r\n\r\n        super(props)\r\n        this.state = {\r\n\r\n            title: '',\r\n            topic: '',\r\n            description: '',\r\n            \r\n        }\r\n\r\n        \r\n    } */\r\n\r\n    onAdd(){\r\n        const { title, topic, description } = this.state;\r\n        const uid = firebase.auth().currentUser.uid\r\n        firebase.firestore().collection('posts')\r\n            .add({\r\n                title,\r\n                topic,\r\n                description,\r\n                uid,\r\n                username: currentUser.username,\r\n                creation: firebase.firestore.FieldValue.serverTimestamp()\r\n            })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View>\r\n                <TextInput\r\n                    placeholder='title'\r\n                    onChangeText={(title) => this.setState({ title })}  \r\n                \r\n                />\r\n                <TextInput\r\n                    placeholder='topic'\r\n                    onChangeText={(topic) => this.setState({ topic })}  \r\n                \r\n                />\r\n                <TextInput\r\n                    placeholder='description'\r\n                    onChangeText={(description) => this.setState({ description })}  \r\n                \r\n                />\r\n\r\n                <Button\r\n                    onPress={() => this.onAdd()}\r\n                    title='Post'\r\n                />\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    currentUser: store.userState.currentUser,\r\n    posts: store.userState.posts,\r\n  })\r\nexport default connect(mapStateToProps, null)(Add);\r\n"]},"metadata":{},"sourceType":"module"}