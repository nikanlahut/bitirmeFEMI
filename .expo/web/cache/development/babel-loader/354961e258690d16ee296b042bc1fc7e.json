{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\AndroidStudioProjects\\\\berkay\\\\bitirme\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from \"./redux/reducers\";\nimport thunk from 'redux-thunk';\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAhDCXsk5t5pCnqXPLM37poW7WqvLdR4Z8\",\n  authDomain: \"bitirme-9f1ff.firebaseapp.com\",\n  projectId: \"bitirme-9f1ff\",\n  storageBucket: \"bitirme-9f1ff.appspot.com\",\n  messagingSenderId: \"1032077887656\",\n  appId: \"1:1032077887656:web:92f1e79b5febfb2d941a9d\",\n  measurementId: \"G-5VE3J9M3GZ\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LandingScreen from \"./components/auth/Landing\";\nimport SignUp from \"./components/auth/SignUp\";\nimport Login from \"./components/auth/Login\";\nimport Main from \"./components/Main\";\nimport Add from \"./components/main/Add\";\nvar Stack = createStackNavigator();\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }\n        }, \"Loading\"));\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Navigator, {\n          initialouteName: \"Landing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen,\n          options: {\n            headerShown: 'false'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"SignUp\",\n          component: SignUp,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: Login,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }\n        })));\n      }\n\n      return React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }\n      }, React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Main\",\n        component: Main,\n        options: {\n          headerShown: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Post Something\",\n        component: Add,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"sources":["C:/Users/user/AndroidStudioProjects/berkay/bitirme/App.js"],"names":["StatusBar","React","Component","firebase","Provider","createStore","applyMiddleware","rootReducer","thunk","store","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","NavigationContainer","createStackNavigator","LandingScreen","SignUp","Login","Main","Add","Stack","App","props","state","loaded","auth","onAuthStateChanged","user","setState","loggedIn","headerShown"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, {Component} from 'react';\r\n\r\nimport firebase from 'firebase/app';\r\n\r\nimport {Provider} from 'react-redux'\r\nimport { createStore, applyMiddleware} from 'redux'\r\nimport rootReducer from './redux/reducers'\r\nimport thunk from 'redux-thunk'\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAhDCXsk5t5pCnqXPLM37poW7WqvLdR4Z8\",\r\n  authDomain: \"bitirme-9f1ff.firebaseapp.com\",\r\n  projectId: \"bitirme-9f1ff\",\r\n  storageBucket: \"bitirme-9f1ff.appspot.com\",\r\n  messagingSenderId: \"1032077887656\",\r\n  appId: \"1:1032077887656:web:92f1e79b5febfb2d941a9d\",\r\n  measurementId: \"G-5VE3J9M3GZ\"\r\n};\r\n\r\nif(firebase.apps.length === 0){\r\n  firebase.initializeApp(firebaseConfig)\r\n}\r\n\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createStackNavigator} from '@react-navigation/stack'\r\n\r\nimport LandingScreen from './components/auth/Landing'\r\nimport SignUp from './components/auth/SignUp'\r\nimport Login from './components/auth/Login'\r\nimport Main from './components/Main'\r\nimport Add from './components/main/Add'\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nimport { View, Text } from 'react-native';\r\n\r\nexport class App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      loaded: false,\r\n    }\r\n  }\r\n\r\ncomponentDidMount(){\r\n  firebase.auth().onAuthStateChanged((user) => {\r\n    if(!user){\r\n      this.setState({\r\n        loggedIn: false,\r\n        loaded: true\r\n      })\r\n    }else{\r\n      this.setState({\r\n        loggedIn: true,\r\n        loaded: true,\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\n  render() {\r\n    const{loggedIn, loaded} = this.state;\r\n    if(!loaded){\r\n      return(\r\n        <View>\r\n          <Text>Loading</Text>\r\n        </View>\r\n      )\r\n    }\r\n    if(!loggedIn) {\r\n      return (\r\n        <NavigationContainer>\r\n        <Stack.Navigator initialouteName='Landing'>\r\n          <Stack.Screen name ='Landing' component={LandingScreen} options = {{headerShown:'false'}}/>\r\n          <Stack.Screen name ='SignUp' component={SignUp}/>\r\n          <Stack.Screen name ='Login' component={Login}/>\r\n        </Stack.Navigator> \r\n      </NavigationContainer>\r\n      )\r\n    }\r\n    return(\r\n      <Provider store={store}>\r\n        <NavigationContainer>\r\n        <Stack.Navigator initialRouteName='Main'>\r\n          <Stack.Screen name ='Main' component={Main} options = {{headerShown:false}}/>\r\n          <Stack.Screen name ='Post Something' component={Add} />\r\n        </Stack.Navigator> \r\n        </NavigationContainer>\r\n      </Provider>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}