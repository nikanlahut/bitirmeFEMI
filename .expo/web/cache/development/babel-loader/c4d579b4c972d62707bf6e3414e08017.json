{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\AndroidStudioProjects\\\\berkay\\\\bitirme\\\\components\\\\main\\\\Feed.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useState } from \"react-native-web/dist/index\";\nimport { useEffect } from \"react-native-web/dist/index\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport firebase from 'firebase';\nexport default function Feed() {\n  var _this = this;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      users = _React$useState4[0],\n      setUsers = _React$useState4[1];\n\n  React.useEffect(function () {\n    var subscriber = firebase.firestore().collection('incidents').onSnapshot(function (querySnapshot) {\n      var users = [];\n      querySnapshot.forEach(function (documentSnapshot) {\n        users.push(_objectSpread(_objectSpread({}, documentSnapshot.data()), {}, {\n          key: documentSnapshot.id\n        }));\n      });\n      setUsers(users);\n      setLoading(false);\n    });\n    return function () {\n      return subscriber();\n    };\n  }, []);\n  return React.createElement(FlatList, {\n    data: users,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          height: 50,\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }, \"name: \", item.name), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }, \"age: \", item.age), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }, \"when: \", item.when), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }, \"where: \", item.where), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      }, \"why: \", item.why));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/user/AndroidStudioProjects/berkay/bitirme/components/main/Feed.js"],"names":["React","useState","useEffect","firebase","Feed","loading","setLoading","users","setUsers","subscriber","firestore","collection","onSnapshot","querySnapshot","forEach","documentSnapshot","push","data","key","id","item","height","flex","alignItems","justifyContent","name","age","when","where","why"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;SACqBC,Q;SAASC,S;;AAC9B,OAAOC,QAAP,MAAqB,UAArB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,wBAA8BJ,KAAK,CAACC,QAAN,CAAe,IAAf,CAA9B;AAAA;AAAA,MAAOI,OAAP;AAAA,MAAgBC,UAAhB;;AACA,yBAA0BN,KAAK,CAACC,QAAN,CAAe,EAAf,CAA1B;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AAEAR,EAAAA,KAAK,CAACE,SAAN,CAAgB,YAAM;AAClB,QAAMO,UAAU,GAAGN,QAAQ,CAACO,SAAT,GAChBC,UADgB,CACL,WADK,EAEhBC,UAFgB,CAEL,UAAAC,aAAa,EAAI;AAC3B,UAAMN,KAAK,GAAG,EAAd;AAEAM,MAAAA,aAAa,CAACC,OAAd,CAAsB,UAAAC,gBAAgB,EAAI;AACxCR,QAAAA,KAAK,CAACS,IAAN,iCACKD,gBAAgB,CAACE,IAAjB,EADL;AAEEC,UAAAA,GAAG,EAAEH,gBAAgB,CAACI;AAFxB;AAID,OALD;AAOAX,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAdgB,CAAnB;AAiBA,WAAO;AAAA,aAAMG,UAAU,EAAhB;AAAA,KAAP;AACD,GAnBH,EAmBK,EAnBL;AAsBE,SACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEF,KADR;AAEE,IAAA,UAAU,EAAE;AAAA,UAAGa,IAAH,QAAGA,IAAH;AAAA,aACV,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,EAAV;AAAcC,UAAAA,IAAI,EAAE,CAApB;AAAuBC,UAAAA,UAAU,EAAE,QAAnC;AAA6CC,UAAAA,cAAc,EAAE;AAA7D,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAaJ,IAAI,CAACK,IAAlB,CADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAYL,IAAI,CAACM,GAAjB,CAFF,EAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAaN,IAAI,CAACO,IAAlB,CAHF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAcP,IAAI,CAACQ,KAAnB,CAJF,EAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAYR,IAAI,CAACS,GAAjB,CALF,CADU;AAAA,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAcL","sourcesContent":["import React from 'react'\r\nimport { View , Text,useState,useEffect, FlatList} from 'react-native'\r\nimport firebase from 'firebase';\r\n\r\nexport default function Feed() {\r\n    const [loading, setLoading] = React.useState(true); // Set loading to true on component mount\r\n    const [users, setUsers] = React.useState([]); // Initial empty array of users\r\n    \r\n    React.useEffect(() => {\r\n        const subscriber = firebase.firestore()\r\n          .collection('incidents')\r\n          .onSnapshot(querySnapshot => {\r\n            const users = [];\r\n      \r\n            querySnapshot.forEach(documentSnapshot => {\r\n              users.push({\r\n                ...documentSnapshot.data(),\r\n                key: documentSnapshot.id,\r\n              });\r\n            });\r\n      \r\n            setUsers(users);\r\n            setLoading(false);\r\n          });\r\n      \r\n        // Unsubscribe from events when no longer in use\r\n        return () => subscriber();\r\n      }, []);\r\n    \r\n    \r\n      return (\r\n        <FlatList\r\n          data={users}\r\n          renderItem={({ item }) => (\r\n            <View style={{ height: 50, flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n              <Text>name: {item.name}</Text>\r\n              <Text>age: {item.age}</Text>\r\n              <Text>when: {item.when}</Text>\r\n              <Text>where: {item.where}</Text>\r\n              <Text>why: {item.why}</Text>\r\n            </View>\r\n          )}\r\n        />\r\n      )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}