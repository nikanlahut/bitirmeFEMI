{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\AndroidStudioProjects\\\\berkay\\\\bitirme\\\\components\\\\main\\\\Forum.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useState } from \"react-native-web/dist/index\";\nimport { useEffect } from \"react-native-web/dist/index\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport { fetchUserPosts } from \"../../redux/actions\";\n\nfunction Forum(props) {\n  var _this = this;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      posts = _React$useState4[0],\n      setPosts = _React$useState4[1];\n\n  React.useEffect(function () {\n    var uid = firebase.auth().currentUser.uid;\n    var subscriber = firebase.firestore().collection('posts').orderBy(\"creation\", \"desc\").onSnapshot(function (querySnapshot) {\n      var posts = [];\n      querySnapshot.forEach(function (documentSnapshot) {\n        posts.push(_objectSpread(_objectSpread({}, documentSnapshot.data()), {}, {\n          key: documentSnapshot.id\n        }));\n      });\n      setPosts(posts);\n      setLoading(false);\n      console.log();\n    });\n    return function () {\n      return subscriber();\n    };\n  }, []);\n  return React.createElement(FlatList, {\n    data: posts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return console.log(item), React.createElement(View, {\n        style: {\n          height: 50,\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }, \"title: \", item.title), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, \"topic: \", item.topic), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }, \"description: \", item.description), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, \"username: \", item.username), React.createElement(Text, {\n        onPress: function onPress() {\n          return props.navigation.navigate('Comment', {\n            postId: item.id\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, \"See Comments\"));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  });\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    posts: store.userState.posts\n  };\n};\n\nexport default connect(mapStateToProps, null)(Forum);","map":{"version":3,"sources":["C:/Users/user/AndroidStudioProjects/berkay/bitirme/components/main/Forum.js"],"names":["React","useState","useEffect","firebase","connect","fetchUserPosts","Forum","props","loading","setLoading","posts","setPosts","uid","auth","currentUser","subscriber","firestore","collection","orderBy","onSnapshot","querySnapshot","forEach","documentSnapshot","push","data","key","id","console","log","item","height","flex","alignItems","justifyContent","title","topic","description","username","navigation","navigate","postId","mapStateToProps","store","userState"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { View , Text,useState,useEffect, FlatList} from 'react-native'\r\nimport firebase from 'firebase';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUserPosts } from '../../redux/actions';\r\n\r\nfunction Forum(props) {\r\n    const [loading, setLoading] = React.useState(true); // Set loading to true on component mount\r\n    const [posts, setPosts] = React.useState([]); // Initial empty array of users\r\n    //const {posts} = props;\r\n\r\n    \r\n   \r\n    React.useEffect(() => {\r\n      const uid = firebase.auth().currentUser.uid\r\n        const subscriber = firebase.firestore()\r\n          .collection('posts')\r\n          .orderBy(\"creation\", \"desc\")\r\n          .onSnapshot(querySnapshot => {\r\n            const posts = [];\r\n      \r\n            querySnapshot.forEach(documentSnapshot => {\r\n                posts.push({\r\n                ...documentSnapshot.data(),\r\n                key: documentSnapshot.id,\r\n              });\r\n            });\r\n      \r\n            setPosts(posts);\r\n            setLoading(false);\r\n            console.log()\r\n          }); \r\n      \r\n        // Unsubscribe from events when no longer in use\r\n        return () => subscriber();\r\n      }, []); \r\n    \r\n      return (\r\n        <FlatList\r\n          data={posts}\r\n          renderItem={({ item }) => (\r\n            console.log(item),\r\n            <View style={{ height: 50, flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n              <Text>title: {item.title}</Text>\r\n              <Text>topic: {item.topic}</Text>\r\n              <Text>description: {item.description}</Text>\r\n              <Text>username: {item.username}</Text>\r\n              <Text\r\n              onPress = {()=>\r\n               props.navigation.navigate('Comment',\r\n              {postId: item.id})}>\r\n              See Comments\r\n            </Text>\r\n            </View>\r\n           \r\n          )}\r\n        />\r\n      )\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n  currentUser: store.userState.currentUser,\r\n  posts: store.userState.posts,\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(Forum);"]},"metadata":{},"sourceType":"module"}