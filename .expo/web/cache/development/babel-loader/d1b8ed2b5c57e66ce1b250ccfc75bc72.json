{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\AndroidStudioProjects\\\\berkay\\\\bitirme\\\\components\\\\Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUser, fetchUserPosts } from \"../redux/actions/index\";\nimport FeedScreen from \"./main/Feed\";\nimport Profile from \"./main/Profile\";\nimport Forum from \"./main/Forum\";\nimport ProfileStack from \"./ProfileStack\";\nimport ForumStack from \"./ForumStack\";\nimport FollowStack from \"./FollowStack\";\nvar Tab = createBottomTabNavigator();\n\nvar Empty = function Empty() {\n  return null;\n};\n\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n      this.props.fetchUserPosts();\n      this.props.fetchFollowings();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Feed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileStack,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-box\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Forum\",\n        component: ForumStack,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"card-text-outline\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Follow\",\n        component: FollowStack,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n                size = _ref4.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"mdiBookmark\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Post\",\n        component: Empty,\n        listeners: function listeners(_ref5) {\n          var navigation = _ref5.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate('Post Something');\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref6) {\n            var color = _ref6.color,\n                size = _ref6.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"plus-box\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser,\n    fetchUserPosts: fetchUserPosts\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["C:/Users/user/AndroidStudioProjects/berkay/bitirme/components/Main.js"],"names":["React","Component","createBottomTabNavigator","MaterialCommunityIcons","connect","bindActionCreators","fetchUser","fetchUserPosts","FeedScreen","Profile","Forum","ProfileStack","ForumStack","FollowStack","Tab","Empty","Main","props","fetchFollowings","tabBarIcon","color","size","navigation","tabPress","event","preventDefault","navigate","mapStateToProps","store","currentUser","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { View, Text } from 'react-native';\r\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs'\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport {fetchUser, fetchUserPosts} from '../redux/actions/index'\r\n\r\n\r\nimport FeedScreen from './main/Feed'\r\nimport Profile from './main/Profile'\r\nimport Forum from './main/Forum'\r\nimport ProfileStack from './ProfileStack'\r\nimport ForumStack from './ForumStack'\r\nimport FollowStack from './FollowStack'\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Empty=() => {\r\n    return(null)\r\n}\r\nexport class Main extends Component {\r\n    componentDidMount(){\r\n        this.props.fetchUser();\r\n        this.props.fetchUserPosts();\r\n        this.props.fetchFollowings();\r\n    }\r\n    render() {\r\n        return (\r\n            \r\n            <Tab.Navigator initialRouteName='Feed'>\r\n                <Tab.Screen name ='Feed' component={FeedScreen}\r\n                options={{\r\n                    tabBarIcon:({color,size}) => (\r\n                        <MaterialCommunityIcons name='home' color={color} size={26}/>\r\n                    )\r\n                }}  />\r\n                <Tab.Screen name ='Profile' component={ProfileStack}\r\n                options={{\r\n                    tabBarIcon:({color,size}) => (\r\n                        <MaterialCommunityIcons name='account-box' color={color} size={26}/>\r\n                    )\r\n                }}  />\r\n                <Tab.Screen name ='Forum' component={ForumStack}\r\n                options={{\r\n                    tabBarIcon:({color,size}) => (\r\n                        <MaterialCommunityIcons name='card-text-outline' color={color} size={26}/>\r\n                    )\r\n                }}  />\r\n                <Tab.Screen name ='Follow' component={FollowStack}\r\n                options={{\r\n                    tabBarIcon:({color,size}) => (\r\n                        <MaterialCommunityIcons name='mdiBookmark' color={color} size={26}/>\r\n                    )\r\n                }}  />\r\n                <Tab.Screen name ='Post' component={Empty}\r\n                listeners={({navigation}) => ({\r\n                    tabPress: event => {\r\n                        event.preventDefault();\r\n                        navigation.navigate('Post Something')\r\n                    }\r\n                })}\r\n                options={{\r\n                    tabBarIcon:({color,size}) => (\r\n                        <MaterialCommunityIcons name='plus-box' color={color} size={26}/>\r\n                    )\r\n                }}  />\r\n                \r\n\r\n            </Tab.Navigator>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    currentUser: store.userState.currentUser\r\n})\r\nconst mapDispatchProps = (dispatch) => bindActionCreators({fetchUser, fetchUserPosts},dispatch)\r\nexport default connect(mapStateToProps, mapDispatchProps)(Main);\r\n"]},"metadata":{},"sourceType":"module"}