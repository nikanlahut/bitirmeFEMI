{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\AndroidStudioProjects\\\\berkay\\\\bitirme\\\\components\\\\main\\\\Add.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport firebase from 'firebase';\nimport 'firebase/auth';\nimport { useNavigation } from '@react-navigation/native';\nimport { connect } from 'react-redux';\nimport { fetchUserPosts } from \"../../redux/actions\";\nimport { Restart } from 'fiction-expo-restart';\n\nfunction Add(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      topic = _useState4[0],\n      setTopic = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      description = _useState6[0],\n      setDescription = _useState6[1];\n\n  var currentUser = props.currentUser;\n  var username = currentUser.username;\n\n  var onAdd = function onAdd() {\n    var uid = firebase.auth().currentUser.uid;\n    firebase.firestore().collection('posts').add({\n      title: title,\n      topic: topic,\n      description: description,\n      uid: uid,\n      username: username,\n      creation: firebase.firestore.FieldValue.serverTimestamp()\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"title\",\n    onChangeText: function onChangeText(title) {\n      return setTitle(title);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"topic\",\n    onChangeText: function onChangeText(topic) {\n      return setTopic(topic);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"description\",\n    onChangeText: function onChangeText(description) {\n      return setDescription(description);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return onAdd();\n    },\n    title: \"Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return Restart();\n    },\n    title: \"res\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 18\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    posts: store.userState.posts\n  };\n};\n\nexport default connect(mapStateToProps, null)(Add);","map":{"version":3,"sources":["C:/Users/user/AndroidStudioProjects/berkay/bitirme/components/main/Add.js"],"names":["React","useState","firebase","useNavigation","connect","fetchUserPosts","Restart","Add","props","title","setTitle","topic","setTopic","description","setDescription","currentUser","username","onAdd","uid","auth","firestore","collection","add","creation","FieldValue","serverTimestamp","catch","error","console","log","mapStateToProps","store","userState","posts"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport{View,Button,TextInput} from 'react-native';\r\nimport firebase from 'firebase';\r\nimport 'firebase/auth';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUserPosts } from '../../redux/actions';\r\nimport {Restart} from 'fiction-expo-restart';\r\n\r\n\r\nfunction Add(props){\r\n    const [title, setTitle] = useState(\"\")\r\n    const [topic, setTopic] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const {currentUser} = props\r\n    const username = currentUser.username\r\n\r\n    const onAdd = () => {\r\n        const uid = firebase.auth().currentUser.uid\r\n        firebase.firestore().collection('posts')\r\n            .add({\r\n                title,\r\n                topic,  \r\n                description,\r\n                uid,\r\n                username,\r\n                creation: firebase.firestore.FieldValue.serverTimestamp()\r\n            })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n\r\n        return (\r\n            <View>\r\n                <TextInput\r\n                    placeholder='title'\r\n                    onChangeText={(title) => setTitle(title)}  \r\n                \r\n                />\r\n                <TextInput\r\n                    placeholder='topic'\r\n                    onChangeText={(topic) => setTopic(topic)}  \r\n                \r\n                />\r\n                <TextInput\r\n                    placeholder='description'\r\n                    onChangeText={(description) => setDescription(description)}  \r\n                \r\n                />\r\n\r\n                <Button\r\n                    onPress={() => onAdd()}\r\n                    title='Post'\r\n                />\r\n                 <Button\r\n                    onPress={() => Restart()}\r\n                    title='res'\r\n                />\r\n            </View>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (store) => ({\r\n    currentUser: store.userState.currentUser,\r\n    posts: store.userState.posts,\r\n  })\r\nexport default connect(mapStateToProps, null)(Add);\r\n"]},"metadata":{},"sourceType":"module"}