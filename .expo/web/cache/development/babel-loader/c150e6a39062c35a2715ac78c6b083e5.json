{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\AndroidStudioProjects\\\\berkay\\\\bitirme\\\\components\\\\main\\\\Forum.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useState } from \"react-native-web/dist/index\";\nimport { useEffect } from \"react-native-web/dist/index\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport { fetchUserPosts } from \"../../redux/actions\";\n\nfunction Forum(props) {\n  var _this = this;\n\n  var posts = props.posts;\n  var follow = [];\n\n  var onFollow = function onFollow(followed) {\n    var uid = firebase.auth().currentUser.uid;\n    firebase.firestore().collection('following').add({\n      uid: uid,\n      followed: followed\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return React.createElement(FlatList, {\n    data: posts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, \"title: \", item.title), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      }, \"topic: \", item.topic), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, \"description: \", item.description), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }, \"username: \", item.username), React.createElement(Button, {\n        title: \"Comments\",\n        onPress: function onPress() {\n          return props.navigation.navigate('Comment', {\n            postId: item.id\n          });\n        },\n        See: true,\n        Comments: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, \"    \"), React.createElement(Button, {\n        title: \"Follow\",\n        onPress: function onPress() {\n          return onFollow(item.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  });\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    posts: store.userState.posts\n  };\n};\n\nexport default connect(mapStateToProps, null)(Forum);","map":{"version":3,"sources":["C:/Users/user/AndroidStudioProjects/berkay/bitirme/components/main/Forum.js"],"names":["React","useState","useEffect","firebase","connect","fetchUserPosts","Forum","props","posts","follow","onFollow","followed","uid","auth","currentUser","firestore","collection","add","catch","error","console","log","item","flex","alignItems","justifyContent","title","topic","description","username","navigation","navigate","postId","id","mapStateToProps","store","userState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;SACqBC,Q;SAASC,S;;;AAC9B,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAGlB,MAAOC,KAAP,GAAgBD,KAAhB,CAAOC,KAAP;AACA,MAAMC,MAAM,GAAG,EAAf;;AAGA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAc;AAC7B,QAAMC,GAAG,GAAGT,QAAQ,CAACU,IAAT,GAAgBC,WAAhB,CAA4BF,GAAxC;AAEAT,IAAAA,QAAQ,CAACY,SAAT,GAAqBC,UAArB,CAAgC,WAAhC,EACKC,GADL,CACS;AACDL,MAAAA,GAAG,EAAHA,GADC;AAEDD,MAAAA,QAAQ,EAARA;AAFC,KADT,EAKCO,KALD,CAKO,UAACC,KAAD,EAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAPD;AAQH,GAXC;;AAuCE,SACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEX,KADR;AAEE,IAAA,UAAU,EAAE;AAAA,UAAGc,IAAH,QAAGA,IAAH;AAAA,aACV,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAE,CAAP;AAAUC,UAAAA,UAAU,EAAE,QAAtB;AAAgCC,UAAAA,cAAc,EAAE;AAAhD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAcH,IAAI,CAACI,KAAnB,CADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAcJ,IAAI,CAACK,KAAnB,CAFF,EAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAoBL,IAAI,CAACM,WAAzB,CAHF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiBN,IAAI,CAACO,QAAtB,CAJF,EAKE,oBAAC,MAAD;AACA,QAAA,KAAK,EAAE,UADP;AAEA,QAAA,OAAO,EAAI;AAAA,iBACVtB,KAAK,CAACuB,UAAN,CAAiBC,QAAjB,CAA0B,SAA1B,EACD;AAACC,YAAAA,MAAM,EAAEV,IAAI,CAACW;AAAd,WADC,CADU;AAAA,SAFX;AAKA,QAAA,GAAG,MALH;AAKI,QAAA,QAAQ,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAYA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZA,EAaA,oBAAC,MAAD;AACQ,QAAA,KAAK,EAAC,QADd;AAEQ,QAAA,OAAO,EAAE;AAAA,iBAAMvB,QAAQ,CAACY,IAAI,CAACW,EAAN,CAAd;AAAA,SAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbA,CADU;AAAA,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA0BL;;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCrB,IAAAA,WAAW,EAAEqB,KAAK,CAACC,SAAN,CAAgBtB,WADK;AAElCN,IAAAA,KAAK,EAAE2B,KAAK,CAACC,SAAN,CAAgB5B;AAFW,GAAZ;AAAA,CAAxB;;AAKA,eAAeJ,OAAO,CAAC8B,eAAD,EAAkB,IAAlB,CAAP,CAA+B5B,KAA/B,CAAf","sourcesContent":["import React from 'react'\r\nimport { View , Text,useState,useEffect, FlatList, Button} from 'react-native'\r\nimport firebase from 'firebase';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUserPosts } from '../../redux/actions';\r\n\r\nfunction Forum(props) {\r\n    //const [loading, setLoading] = React.useState(true); // Set loading to true on component mount\r\n    //const [posts, setPosts] = React.useState([]); // Initial empty array of users\r\n    const {posts} = props;\r\n    const follow = [];\r\n\r\n    \r\n    const onFollow = (followed) => {\r\n      const uid = firebase.auth().currentUser.uid\r\n\r\n      firebase.firestore().collection('following')\r\n          .add({\r\n              uid,\r\n              followed\r\n          })\r\n      .catch((error) => {\r\n          console.log(error)\r\n      })\r\n  }\r\n\r\n   /*\r\n    React.useEffect(() => {\r\n      const uid = firebase.auth().currentUser.uid\r\n        const subscriber = firebase.firestore()\r\n          .collection('posts')\r\n          .orderBy(\"creation\", \"desc\")\r\n          .onSnapshot(querySnapshot => {\r\n            const posts = [];\r\n      \r\n            querySnapshot.forEach(documentSnapshot => {\r\n                posts.push({\r\n                ...documentSnapshot.data(),\r\n                key: documentSnapshot.id,\r\n              });\r\n            });\r\n      \r\n            setPosts(posts);\r\n            setLoading(false);\r\n            console.log()\r\n          }); \r\n      \r\n        // Unsubscribe from events when no longer in use\r\n        return () => subscriber();\r\n      }, []); \r\n      */\r\n    \r\n      return (\r\n        <FlatList\r\n          data={posts}\r\n          renderItem={({ item }) => (\r\n            <View style={{flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n              <Text>title: {item.title}</Text>\r\n              <Text>topic: {item.topic}</Text>\r\n              <Text>description: {item.description}</Text>\r\n              <Text>username: {item.username}</Text>\r\n              <Button\r\n              title= \"Comments\"\r\n              onPress = {()=>\r\n               props.navigation.navigate('Comment',\r\n              {postId: item.id})}\r\n              See Comments\r\n            />\r\n            <Text>    </Text>\r\n            <Button\r\n                    title=\"Follow\"\r\n                    onPress={() => onFollow(item.id)}\r\n                />\r\n            </View>\r\n           \r\n          )}\r\n        />\r\n      )\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n  currentUser: store.userState.currentUser,\r\n  posts: store.userState.posts,\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(Forum);"]},"metadata":{},"sourceType":"module"}