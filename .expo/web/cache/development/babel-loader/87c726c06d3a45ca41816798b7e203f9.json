{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\AndroidStudioProjects\\\\berkay\\\\bitirme\\\\components\\\\main\\\\Follow.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport { fetchUserPosts } from \"../../redux/actions\";\n\nfunction Follow(props) {\n  var _this = this;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      posts = _React$useState2[0],\n      setPosts = _React$useState2[1];\n\n  React.useEffect(function () {\n    var uid = firebase.auth().currentUser.uid;\n\n    var _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        falove = _useState2[0],\n        setFalove = _useState2[1];\n\n    firebase.firestore().collection('following').where('uid', '==', uid).get().then(function (snapshot) {\n      var falove = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setFalove(falove);\n    });\n    var subscriber = firebase.firestore().collection('posts').doc(falove.followed).onSnapshot(function (querySnapshot) {\n      var posts = [];\n      querySnapshot.forEach(function (documentSnapshot) {\n        posts.push(_objectSpread(_objectSpread({}, documentSnapshot.data()), {}, {\n          key: documentSnapshot.id\n        }));\n      });\n      setPosts(posts);\n      console.log();\n    });\n    return function () {\n      return subscriber();\n    };\n  }, []);\n  return React.createElement(FlatList, {\n    data: posts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      }, \"title: \", item.title), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, \"topic: \", item.topic), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }, \"description: \", item.description), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, \"username: \", item.username), React.createElement(Text, {\n        onPress: function onPress() {\n          return props.navigation.navigate('Comment', {\n            postId: item.id\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, \"See Comments\"));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  });\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    posts: store.userState.posts\n  };\n};\n\nexport default connect(mapStateToProps, null)(Follow);","map":{"version":3,"sources":["C:/Users/user/AndroidStudioProjects/berkay/bitirme/components/main/Follow.js"],"names":["React","useState","useEffect","firebase","connect","fetchUserPosts","Follow","props","posts","setPosts","uid","auth","currentUser","falove","setFalove","firestore","collection","where","get","then","snapshot","docs","map","doc","data","id","subscriber","followed","onSnapshot","querySnapshot","forEach","documentSnapshot","push","key","console","log","item","flex","alignItems","justifyContent","title","topic","description","username","navigation","navigate","postId","mapStateToProps","store","userState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { View , Text,FlatList} from 'react-native'\r\nimport firebase from 'firebase';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUserPosts } from '../../redux/actions';\r\n\r\nfunction Follow(props) {\r\n    const [posts, setPosts] = React.useState([]);\r\n\r\n\r\n\r\n\r\n    React.useEffect(() => {\r\n        const uid = firebase.auth().currentUser.uid\r\n        const [falove, setFalove] = useState([])\r\n\r\n\r\n        firebase.firestore()\r\n        .collection('following')\r\n        .where('uid', '==', uid)\r\n        .get()\r\n        .then((snapshot) => {\r\n            let falove = snapshot.docs.map(doc => {\r\n                const data = doc.data();\r\n                const id = doc.id;\r\n                return { id, ...data }\r\n            })\r\n            setFalove(falove)\r\n        })\r\n\r\n\r\n          const subscriber = firebase.firestore()\r\n            .collection('posts')\r\n            .doc(falove.followed)\r\n            .onSnapshot(querySnapshot => {\r\n              const posts = [];\r\n        \r\n              querySnapshot.forEach(documentSnapshot => {\r\n                  posts.push({\r\n                  ...documentSnapshot.data(),\r\n                  key: documentSnapshot.id,\r\n                });\r\n              });\r\n        \r\n              setPosts(posts);\r\n              console.log()\r\n            }\r\n            );\r\n        \r\n          // Unsubscribe from events when no longer in use\r\n          return () => subscriber();\r\n        }, []);\r\n    \r\n      return (\r\n        <FlatList\r\n          data={posts}\r\n          renderItem={({ item }) => (\r\n            <View style={{flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n              <Text>title: {item.title}</Text>\r\n              <Text>topic: {item.topic}</Text>\r\n              <Text>description: {item.description}</Text>\r\n              <Text>username: {item.username}</Text>\r\n              <Text\r\n              onPress = {()=>\r\n               props.navigation.navigate('Comment',\r\n              {postId: item.id})}>\r\n              See Comments\r\n            </Text>\r\n            </View>\r\n           \r\n          )}\r\n        />\r\n      )\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n  currentUser: store.userState.currentUser,\r\n  posts: store.userState.posts,\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(Follow);"]},"metadata":{},"sourceType":"module"}